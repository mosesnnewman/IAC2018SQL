<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonTransfer.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>