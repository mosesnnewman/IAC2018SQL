//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IAC2021SQL.MessageWSProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSTransactionResponse", Namespace="http://SBTAPIService/DataContract/")]
    [System.SerializableAttribute()]
    public partial class WSTransactionResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IAC2021SQL.MessageWSProxy.TransactionDetail[] ResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public IAC2021SQL.MessageWSProxy.TransactionDetail[] Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionDetail", Namespace="http://SBTAPIService/DataContract/")]
    [System.SerializableAttribute()]
    public partial class TransactionDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SendTo {
            get {
                return this.SendToField;
            }
            set {
                if ((object.ReferenceEquals(this.SendToField, value) != true)) {
                    this.SendToField = value;
                    this.RaisePropertyChanged("SendTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSVerificationResponse", Namespace="http://SBTAPIService/DataContract/")]
    [System.SerializableAttribute()]
    public partial class WSVerificationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Pin {
            get {
                return this.PinField;
            }
            set {
                if ((object.ReferenceEquals(this.PinField, value) != true)) {
                    this.PinField = value;
                    this.RaisePropertyChanged("Pin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public bool Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSVBTResponse", Namespace="http://SBTAPIService/DataContract/")]
    [System.SerializableAttribute()]
    public partial class WSVBTResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTicketField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Pin {
            get {
                return this.PinField;
            }
            set {
                if ((object.ReferenceEquals(this.PinField, value) != true)) {
                    this.PinField = value;
                    this.RaisePropertyChanged("Pin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public bool Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string TransactionTicket {
            get {
                return this.TransactionTicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTicketField, value) != true)) {
                    this.TransactionTicketField = value;
                    this.RaisePropertyChanged("TransactionTicket");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSRecipient", Namespace="http://SBTAPIService/DataContract/")]
    [System.SerializableAttribute()]
    public partial class WSRecipient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IAC2021SQL.MessageWSProxy.CustomField[] CustomFieldsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SendTo {
            get {
                return this.SendToField;
            }
            set {
                if ((object.ReferenceEquals(this.SendToField, value) != true)) {
                    this.SendToField = value;
                    this.RaisePropertyChanged("SendTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public IAC2021SQL.MessageWSProxy.CustomField[] CustomFields {
            get {
                return this.CustomFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomFieldsField, value) != true)) {
                    this.CustomFieldsField = value;
                    this.RaisePropertyChanged("CustomFields");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomField", Namespace="http://SBTAPIService/DataContract/")]
    [System.SerializableAttribute()]
    public partial class CustomField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSMessageResponse", Namespace="http://SBTAPIService/DataContract/")]
    [System.SerializableAttribute()]
    public partial class WSMessageResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTicketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string noteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string TransactionTicket {
            get {
                return this.TransactionTicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTicketField, value) != true)) {
                    this.TransactionTicketField = value;
                    this.RaisePropertyChanged("TransactionTicket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string note {
            get {
                return this.noteField;
            }
            set {
                if ((object.ReferenceEquals(this.noteField, value) != true)) {
                    this.noteField = value;
                    this.RaisePropertyChanged("note");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSOrgRecipient", Namespace="http://SBTAPIService/DataContract/")]
    [System.SerializableAttribute()]
    public partial class WSOrgRecipient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IAC2021SQL.MessageWSProxy.CustomField[] CustomFieldsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string OrgCode {
            get {
                return this.OrgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgCodeField, value) != true)) {
                    this.OrgCodeField = value;
                    this.RaisePropertyChanged("OrgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public IAC2021SQL.MessageWSProxy.CustomField[] CustomFields {
            get {
                return this.CustomFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomFieldsField, value) != true)) {
                    this.CustomFieldsField = value;
                    this.RaisePropertyChanged("CustomFields");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://SBTService/ServiceContracts/", ConfigurationName="MessageWSProxy.IMessage")]
    public interface IMessage {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/GetMessageStatusByNote", ReplyAction="http://SBTService/ServiceContracts/IMessage/GetMessageStatusByNoteResponse")]
        IAC2021SQL.MessageWSProxy.WSTransactionResponse GetMessageStatusByNote(string securityToken, string note, string orgCode, string sentTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/GetMessageStatusByNote", ReplyAction="http://SBTService/ServiceContracts/IMessage/GetMessageStatusByNoteResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSTransactionResponse> GetMessageStatusByNoteAsync(string securityToken, string note, string orgCode, string sentTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/GetMessageStatus", ReplyAction="http://SBTService/ServiceContracts/IMessage/GetMessageStatusResponse")]
        IAC2021SQL.MessageWSProxy.WSTransactionResponse GetMessageStatus(string securityToken, string transactionTicketId, string orgCode, string sentTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/GetMessageStatus", ReplyAction="http://SBTService/ServiceContracts/IMessage/GetMessageStatusResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSTransactionResponse> GetMessageStatusAsync(string securityToken, string transactionTicketId, string orgCode, string sentTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ConfirmVBT", ReplyAction="http://SBTService/ServiceContracts/IMessage/ConfirmVBTResponse")]
        IAC2021SQL.MessageWSProxy.WSVerificationResponse ConfirmVBT(string securityToken, string orgCode, string phone, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ConfirmVBT", ReplyAction="http://SBTService/ServiceContracts/IMessage/ConfirmVBTResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVerificationResponse> ConfirmVBTAsync(string securityToken, string orgCode, string phone, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/RequestVBT", ReplyAction="http://SBTService/ServiceContracts/IMessage/RequestVBTResponse")]
        IAC2021SQL.MessageWSProxy.WSVerificationResponse RequestVBT(string securityToken, string orgCode, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/RequestVBT", ReplyAction="http://SBTService/ServiceContracts/IMessage/RequestVBTResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVerificationResponse> RequestVBTAsync(string securityToken, string orgCode, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/RequireVBT", ReplyAction="http://SBTService/ServiceContracts/IMessage/RequireVBTResponse")]
        IAC2021SQL.MessageWSProxy.WSVerificationResponse RequireVBT(string securityToken, string orgCode, string phone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/RequireVBT", ReplyAction="http://SBTService/ServiceContracts/IMessage/RequireVBTResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVerificationResponse> RequireVBTAsync(string securityToken, string orgCode, string phone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ConfirmVBTWithTransactionTicket", ReplyAction="http://SBTService/ServiceContracts/IMessage/ConfirmVBTWithTransactionTicketRespon" +
            "se")]
        IAC2021SQL.MessageWSProxy.WSVBTResponse ConfirmVBTWithTransactionTicket(string securityToken, string orgCode, string phone, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ConfirmVBTWithTransactionTicket", ReplyAction="http://SBTService/ServiceContracts/IMessage/ConfirmVBTWithTransactionTicketRespon" +
            "se")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVBTResponse> ConfirmVBTWithTransactionTicketAsync(string securityToken, string orgCode, string phone, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/RequestVBTWithTransactionTicket", ReplyAction="http://SBTService/ServiceContracts/IMessage/RequestVBTWithTransactionTicketRespon" +
            "se")]
        IAC2021SQL.MessageWSProxy.WSVBTResponse RequestVBTWithTransactionTicket(string securityToken, string orgCode, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/RequestVBTWithTransactionTicket", ReplyAction="http://SBTService/ServiceContracts/IMessage/RequestVBTWithTransactionTicketRespon" +
            "se")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVBTResponse> RequestVBTWithTransactionTicketAsync(string securityToken, string orgCode, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/RequireVBTWithTransactionTicket", ReplyAction="http://SBTService/ServiceContracts/IMessage/RequireVBTWithTransactionTicketRespon" +
            "se")]
        IAC2021SQL.MessageWSProxy.WSVBTResponse RequireVBTWithTransactionTicket(string securityToken, string orgCode, string phone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/RequireVBTWithTransactionTicket", ReplyAction="http://SBTService/ServiceContracts/IMessage/RequireVBTWithTransactionTicketRespon" +
            "se")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVBTResponse> RequireVBTWithTransactionTicketAsync(string securityToken, string orgCode, string phone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/SendMessage", ReplyAction="http://SBTService/ServiceContracts/IMessage/SendMessageResponse")]
        IAC2021SQL.MessageWSProxy.WSMessageResponse SendMessage(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/SendMessage", ReplyAction="http://SBTService/ServiceContracts/IMessage/SendMessageResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> SendMessageAsync(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/SendMessageToOrg", ReplyAction="http://SBTService/ServiceContracts/IMessage/SendMessageToOrgResponse")]
        IAC2021SQL.MessageWSProxy.WSMessageResponse SendMessageToOrg(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/SendMessageToOrg", ReplyAction="http://SBTService/ServiceContracts/IMessage/SendMessageToOrgResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> SendMessageToOrgAsync(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/SendTemplateMessage", ReplyAction="http://SBTService/ServiceContracts/IMessage/SendTemplateMessageResponse")]
        IAC2021SQL.MessageWSProxy.WSMessageResponse SendTemplateMessage(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/SendTemplateMessage", ReplyAction="http://SBTService/ServiceContracts/IMessage/SendTemplateMessageResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> SendTemplateMessageAsync(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ScheduleSendMessage", ReplyAction="http://SBTService/ServiceContracts/IMessage/ScheduleSendMessageResponse")]
        IAC2021SQL.MessageWSProxy.WSMessageResponse ScheduleSendMessage(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ScheduleSendMessage", ReplyAction="http://SBTService/ServiceContracts/IMessage/ScheduleSendMessageResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> ScheduleSendMessageAsync(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ScheduleSendTemplateMessage", ReplyAction="http://SBTService/ServiceContracts/IMessage/ScheduleSendTemplateMessageResponse")]
        IAC2021SQL.MessageWSProxy.WSMessageResponse ScheduleSendTemplateMessage(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ScheduleSendTemplateMessage", ReplyAction="http://SBTService/ServiceContracts/IMessage/ScheduleSendTemplateMessageResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> ScheduleSendTemplateMessageAsync(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ScheduleSendMessageToOrg", ReplyAction="http://SBTService/ServiceContracts/IMessage/ScheduleSendMessageToOrgResponse")]
        IAC2021SQL.MessageWSProxy.WSMessageResponse ScheduleSendMessageToOrg(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ScheduleSendMessageToOrg", ReplyAction="http://SBTService/ServiceContracts/IMessage/ScheduleSendMessageToOrgResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> ScheduleSendMessageToOrgAsync(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ScheduleSendTemplateMessageToOrg", ReplyAction="http://SBTService/ServiceContracts/IMessage/ScheduleSendTemplateMessageToOrgRespo" +
            "nse")]
        IAC2021SQL.MessageWSProxy.WSMessageResponse ScheduleSendTemplateMessageToOrg(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/ScheduleSendTemplateMessageToOrg", ReplyAction="http://SBTService/ServiceContracts/IMessage/ScheduleSendTemplateMessageToOrgRespo" +
            "nse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> ScheduleSendTemplateMessageToOrgAsync(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/SendTemplateMessageToOrg", ReplyAction="http://SBTService/ServiceContracts/IMessage/SendTemplateMessageToOrgResponse")]
        IAC2021SQL.MessageWSProxy.WSMessageResponse SendTemplateMessageToOrg(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, string note, string statusUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://SBTService/ServiceContracts/IMessage/SendTemplateMessageToOrg", ReplyAction="http://SBTService/ServiceContracts/IMessage/SendTemplateMessageToOrgResponse")]
        System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> SendTemplateMessageToOrgAsync(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, string note, string statusUrl);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageChannel : IAC2021SQL.MessageWSProxy.IMessage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageClient : System.ServiceModel.ClientBase<IAC2021SQL.MessageWSProxy.IMessage>, IAC2021SQL.MessageWSProxy.IMessage {
        
        public MessageClient() {
        }
        
        public MessageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IAC2021SQL.MessageWSProxy.WSTransactionResponse GetMessageStatusByNote(string securityToken, string note, string orgCode, string sentTo) {
            return base.Channel.GetMessageStatusByNote(securityToken, note, orgCode, sentTo);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSTransactionResponse> GetMessageStatusByNoteAsync(string securityToken, string note, string orgCode, string sentTo) {
            return base.Channel.GetMessageStatusByNoteAsync(securityToken, note, orgCode, sentTo);
        }
        
        public IAC2021SQL.MessageWSProxy.WSTransactionResponse GetMessageStatus(string securityToken, string transactionTicketId, string orgCode, string sentTo) {
            return base.Channel.GetMessageStatus(securityToken, transactionTicketId, orgCode, sentTo);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSTransactionResponse> GetMessageStatusAsync(string securityToken, string transactionTicketId, string orgCode, string sentTo) {
            return base.Channel.GetMessageStatusAsync(securityToken, transactionTicketId, orgCode, sentTo);
        }
        
        public IAC2021SQL.MessageWSProxy.WSVerificationResponse ConfirmVBT(string securityToken, string orgCode, string phone, string pin) {
            return base.Channel.ConfirmVBT(securityToken, orgCode, phone, pin);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVerificationResponse> ConfirmVBTAsync(string securityToken, string orgCode, string phone, string pin) {
            return base.Channel.ConfirmVBTAsync(securityToken, orgCode, phone, pin);
        }
        
        public IAC2021SQL.MessageWSProxy.WSVerificationResponse RequestVBT(string securityToken, string orgCode, string phone) {
            return base.Channel.RequestVBT(securityToken, orgCode, phone);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVerificationResponse> RequestVBTAsync(string securityToken, string orgCode, string phone) {
            return base.Channel.RequestVBTAsync(securityToken, orgCode, phone);
        }
        
        public IAC2021SQL.MessageWSProxy.WSVerificationResponse RequireVBT(string securityToken, string orgCode, string phone, string note, string statusUrl) {
            return base.Channel.RequireVBT(securityToken, orgCode, phone, note, statusUrl);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVerificationResponse> RequireVBTAsync(string securityToken, string orgCode, string phone, string note, string statusUrl) {
            return base.Channel.RequireVBTAsync(securityToken, orgCode, phone, note, statusUrl);
        }
        
        public IAC2021SQL.MessageWSProxy.WSVBTResponse ConfirmVBTWithTransactionTicket(string securityToken, string orgCode, string phone, string pin) {
            return base.Channel.ConfirmVBTWithTransactionTicket(securityToken, orgCode, phone, pin);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVBTResponse> ConfirmVBTWithTransactionTicketAsync(string securityToken, string orgCode, string phone, string pin) {
            return base.Channel.ConfirmVBTWithTransactionTicketAsync(securityToken, orgCode, phone, pin);
        }
        
        public IAC2021SQL.MessageWSProxy.WSVBTResponse RequestVBTWithTransactionTicket(string securityToken, string orgCode, string phone) {
            return base.Channel.RequestVBTWithTransactionTicket(securityToken, orgCode, phone);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVBTResponse> RequestVBTWithTransactionTicketAsync(string securityToken, string orgCode, string phone) {
            return base.Channel.RequestVBTWithTransactionTicketAsync(securityToken, orgCode, phone);
        }
        
        public IAC2021SQL.MessageWSProxy.WSVBTResponse RequireVBTWithTransactionTicket(string securityToken, string orgCode, string phone, string note, string statusUrl) {
            return base.Channel.RequireVBTWithTransactionTicket(securityToken, orgCode, phone, note, statusUrl);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSVBTResponse> RequireVBTWithTransactionTicketAsync(string securityToken, string orgCode, string phone, string note, string statusUrl) {
            return base.Channel.RequireVBTWithTransactionTicketAsync(securityToken, orgCode, phone, note, statusUrl);
        }
        
        public IAC2021SQL.MessageWSProxy.WSMessageResponse SendMessage(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, string note, string statusUrl) {
            return base.Channel.SendMessage(securityToken, message, sendTo, orgCode, note, statusUrl);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> SendMessageAsync(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, string note, string statusUrl) {
            return base.Channel.SendMessageAsync(securityToken, message, sendTo, orgCode, note, statusUrl);
        }
        
        public IAC2021SQL.MessageWSProxy.WSMessageResponse SendMessageToOrg(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, string note, string statusUrl) {
            return base.Channel.SendMessageToOrg(securityToken, message, orgCode, note, statusUrl);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> SendMessageToOrgAsync(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, string note, string statusUrl) {
            return base.Channel.SendMessageToOrgAsync(securityToken, message, orgCode, note, statusUrl);
        }
        
        public IAC2021SQL.MessageWSProxy.WSMessageResponse SendTemplateMessage(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, string note, string statusUrl) {
            return base.Channel.SendTemplateMessage(securityToken, templateID, sendTo, orgCode, note, statusUrl);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> SendTemplateMessageAsync(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, string note, string statusUrl) {
            return base.Channel.SendTemplateMessageAsync(securityToken, templateID, sendTo, orgCode, note, statusUrl);
        }
        
        public IAC2021SQL.MessageWSProxy.WSMessageResponse ScheduleSendMessage(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl) {
            return base.Channel.ScheduleSendMessage(securityToken, message, sendTo, orgCode, scheduleDateTime, timeZone, note, statusUrl);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> ScheduleSendMessageAsync(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl) {
            return base.Channel.ScheduleSendMessageAsync(securityToken, message, sendTo, orgCode, scheduleDateTime, timeZone, note, statusUrl);
        }
        
        public IAC2021SQL.MessageWSProxy.WSMessageResponse ScheduleSendTemplateMessage(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl) {
            return base.Channel.ScheduleSendTemplateMessage(securityToken, templateID, sendTo, orgCode, scheduleDateTime, timeZone, note, statusUrl);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> ScheduleSendTemplateMessageAsync(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSRecipient[] sendTo, string orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl) {
            return base.Channel.ScheduleSendTemplateMessageAsync(securityToken, templateID, sendTo, orgCode, scheduleDateTime, timeZone, note, statusUrl);
        }
        
        public IAC2021SQL.MessageWSProxy.WSMessageResponse ScheduleSendMessageToOrg(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl) {
            return base.Channel.ScheduleSendMessageToOrg(securityToken, message, orgCode, scheduleDateTime, timeZone, note, statusUrl);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> ScheduleSendMessageToOrgAsync(string securityToken, string message, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl) {
            return base.Channel.ScheduleSendMessageToOrgAsync(securityToken, message, orgCode, scheduleDateTime, timeZone, note, statusUrl);
        }
        
        public IAC2021SQL.MessageWSProxy.WSMessageResponse ScheduleSendTemplateMessageToOrg(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl) {
            return base.Channel.ScheduleSendTemplateMessageToOrg(securityToken, templateID, orgCode, scheduleDateTime, timeZone, note, statusUrl);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> ScheduleSendTemplateMessageToOrgAsync(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, System.DateTime scheduleDateTime, string timeZone, string note, string statusUrl) {
            return base.Channel.ScheduleSendTemplateMessageToOrgAsync(securityToken, templateID, orgCode, scheduleDateTime, timeZone, note, statusUrl);
        }
        
        public IAC2021SQL.MessageWSProxy.WSMessageResponse SendTemplateMessageToOrg(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, string note, string statusUrl) {
            return base.Channel.SendTemplateMessageToOrg(securityToken, templateID, orgCode, note, statusUrl);
        }
        
        public System.Threading.Tasks.Task<IAC2021SQL.MessageWSProxy.WSMessageResponse> SendTemplateMessageToOrgAsync(string securityToken, int templateID, IAC2021SQL.MessageWSProxy.WSOrgRecipient[] orgCode, string note, string statusUrl) {
            return base.Channel.SendTemplateMessageToOrgAsync(securityToken, templateID, orgCode, note, statusUrl);
        }
    }
}
